import {HttpLibrary, Request, Response} from './http';
import * as e6p from 'es6-promise'
e6p.polyfill();
import 'isomorphic-fetch';

export class IsomorphicFetchHttpLibrary implements HttpLibrary {

    public send(request: Request): Promise<Response> {
        let method = request.httpMethod.toString();
        return fetch(request.url, {
            method: method,
            body: request.body,
            headers: request.headers,
            credentials: "same-origin"
        }).then((resp) => {
            // hack
            let headers = (resp.headers as any)._headers;
            for (let key in headers) {
                headers[key] = (headers[key] as Array<string>).join("; ");
            }

            return resp.text().then((body) => {
                return new Response(resp.status, headers, body)
            });
        });
    }
}
